{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sani\\\\Documents\\\\Smart Search Local\\\\Atlas-Front-End\\\\src\\\\components\\\\DataCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Component for an individual data card\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataCard = _ref => {\n  let {\n    item,\n    selectedItem,\n    onItemClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `data-card ${selectedItem === item ? 'selected' : ''}`,\n    onClick: () => onItemClick(item),\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: item[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n// Component for a box containing data cards\n_c = DataCard;\nconst DataBox = _ref2 => {\n  _s();\n  let {\n    name,\n    responseData\n  } = _ref2;\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    if (responseData) {\n      setOptions(responseData); // Assign responseData directly to options\n    }\n  }, [responseData]);\n\n  // Handle click on a data card\n  const handleItemClick = item => {\n    setSelectedItem(item);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-cards\",\n      children: options.map((item, index) => /*#__PURE__*/_jsxDEV(DataCard, {\n        item: item,\n        selectedItem: selectedItem,\n        onItemClick: handleItemClick\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n// Top-level component for displaying multiple data boxes\n_s(DataBox, \"tIVx+r/uBEwH+QysLnCtrX+Me8M=\");\n_c2 = DataBox;\nconst DataCards = _ref3 => {\n  let {\n    names,\n    responseData\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boxes\",\n    children: names.map((name, index) => /*#__PURE__*/_jsxDEV(DataBox, {\n      name: name,\n      responseData: responseData\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c3 = DataCards;\nexport default DataCards;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DataCard\");\n$RefreshReg$(_c2, \"DataBox\");\n$RefreshReg$(_c3, \"DataCards\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DataCard","_ref","item","selectedItem","onItemClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DataBox","_ref2","_s","name","responseData","setSelectedItem","options","setOptions","handleItemClick","map","index","_c2","DataCards","_ref3","names","_c3","$RefreshReg$"],"sources":["E:/Sani/Documents/Smart Search Local/Atlas-Front-End/src/components/DataCards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Component for an individual data card\r\nconst DataCard = ({ item, selectedItem, onItemClick }) => {\r\n  return (\r\n    <div\r\n      className={`data-card ${selectedItem === item ? 'selected' : ''}`}\r\n      onClick={() => onItemClick(item)}\r\n    >\r\n      <p>{item[0]}</p> {/* Display the first property of the item object */}\r\n      <p>{item[1]}</p> {/* Display the second property of the item object */}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Component for a box containing data cards\r\nconst DataBox = ({ name, responseData }) => {\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (responseData) {\r\n      setOptions(responseData); // Assign responseData directly to options\r\n    }\r\n  }, [responseData]);\r\n\r\n  // Handle click on a data card\r\n  const handleItemClick = (item) => {\r\n    setSelectedItem(item);\r\n  };\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <h2>{name}</h2>\r\n      <div className=\"data-cards\">\r\n        {options.map((item, index) => (\r\n          <DataCard\r\n            key={index}\r\n            item={item}\r\n            selectedItem={selectedItem}\r\n            onItemClick={handleItemClick}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Top-level component for displaying multiple data boxes\r\nconst DataCards = ({ names, responseData }) => {\r\n  return (\r\n    <div className=\"boxes\">\r\n      {names.map((name, index) => (\r\n        <DataBox key={index} name={name} responseData={responseData} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataCards;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}