{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sani\\\\Documents\\\\Smart Search Github Repo\\\\Atlas-Front-End\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useState } from 'react';\n//import FetchData from './FetchData';\nimport DataCards from './DataCards';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostForm() {\n  _s();\n  const url = \"\";\n  const [data, setData] = useState({\n    names: [] //Updated state to hold an array of strings\n  });\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  function submit(e) {\n    e.preventDefault();\n    Axios.post(url, {\n      names: data.names\n    }).then(res => {\n      console.log(res.data);\n      setIsSubmitted(true);\n    }).catch(error => {\n      console.error('Error', error);\n    });\n  }\n  function handle(e) {\n    const inputValue = e.target.value;\n    const inputArray = inputValue.split('\\n'); // Split the input string into an array based on newline character\n    setData({\n      names: inputArray,\n      submitted: false\n    }); // Update the state with the array of strings\n    console.log(inputArray); //Print Array onto console\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Forms\",\n    className: \"forms\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Atlas smart search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: handle,\n              className: \"sku_textarea\",\n              value: data.names.join('\\n'),\n              placeholder: \"PASTE END USER DESCRIPTION AS PROMPT\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-submit\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output_box\",\n        children: [/*#__PURE__*/_jsxDEV(DataCards, {\n          names: data.names\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 12\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(PostForm, \"25iPOHBdDzt/OXyHz6ll9HBJwLU=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","Component","useState","DataCards","Axios","jsxDEV","_jsxDEV","PostForm","_s","url","data","setData","names","isSubmitted","setIsSubmitted","submit","e","preventDefault","post","then","res","console","log","catch","error","handle","inputValue","target","value","inputArray","split","submitted","id","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","join","placeholder","type","_c","$RefreshReg$"],"sources":["E:/Sani/Documents/Smart Search Github Repo/Atlas-Front-End/src/components/PostForm.js"],"sourcesContent":["import React, {Component, useState} from 'react';\r\n//import FetchData from './FetchData';\r\nimport DataCards from './DataCards';\r\nimport Axios from 'axios';\r\n\r\n\r\nfunction PostForm() {\r\n    const url =\"\"\r\n    const [data, setData] = useState({\r\n        names: [], //Updated state to hold an array of strings\r\n    })\r\n\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    function submit(e){\r\n        e.preventDefault();\r\n        Axios.post(url,{\r\n            names: data.names\r\n        })\r\n        .then(res=>{\r\n            console.log(res.data)\r\n            setIsSubmitted(true);\r\n        })\r\n        .catch((error)=>{\r\n          console.error('Error',error)\r\n        })\r\n    }\r\n\r\n    function handle(e){\r\n        const inputValue = e.target.value;\r\n        const inputArray = inputValue.split('\\n'); // Split the input string into an array based on newline character\r\n        setData({ names: inputArray, submitted: false }); // Update the state with the array of strings\r\n        console.log(inputArray); //Print Array onto console\r\n    }\r\n  return (\r\n    <div id=\"Forms\" className=\"forms\">\r\n      <div className=\"container\">\r\n        <form onSubmit={submit}>\r\n          <div className=\"form_box\">\r\n            <div className=\"row\">\r\n              <h1>Atlas smart search</h1>\r\n              <textarea\r\n                onChange={handle}\r\n                className=\"sku_textarea\"\r\n                value={data.names.join('\\n')}\r\n                placeholder=\"PASTE END USER DESCRIPTION AS PROMPT\"\r\n                type=\"text\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn-submit\" type=\"submit\">Submit</button>\r\n        </form>\r\n\r\n        {isSubmitted &&(\r\n        <div className=\"output_box\">\r\n           <DataCards names={data.names} /> {/* Pass the names array as props to DataCards.js component */}\r\n        </div>\r\n      )}\r\n      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}