{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sani\\\\Documents\\\\Smart Search Github Pages\\\\Test\\\\src\\\\components\\\\DataCards.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ImportFile from './ImportFile';\n\n// Component for an individual data card\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DataCard = _ref => {\n  let {\n    item,\n    selectedItem,\n    onItemClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `data-card ${selectedItem === item ? 'selected' : ''}`,\n    onClick: () => onItemClick(item),\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: item[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n// Component for a box containing data cards\n_c = DataCard;\nconst DataBox = _ref2 => {\n  _s();\n  let {\n    name,\n    responseData,\n    onItemClick,\n    boxIndex,\n    manualInput,\n    onManualInputChange\n  } = _ref2;\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [showAll, setShowAll] = useState(false);\n  useEffect(() => {\n    if (responseData) {\n      setOptions(responseData); // Assign responseData directly to options\n    }\n  }, [responseData]);\n\n  // Function to handle user selections in DataCard component\n  const handleItemClick = item => {\n    console.log('Clicked on item:', item[0], item[1], 'in', name);\n    setSelectedItem(item, name);\n    onItemClick(item, name, boxIndex);\n  };\n  const handleFormReset = () => {\n    setSelectedItem(null); // Reset the selected item\n    onManualInputChange('SAP', ''); // Clear manualInput.SAP\n    onManualInputChange('ProductDescription', ''); // Clear manualInput.ProductDescription\n    onItemClick(null, name, boxIndex); // Pass null as the selectedItem\n  };\n\n  // Function to handle manual input change for \"SAP Item Number\" and \"Product Description\"\n  const handleManualInputChange = (inputType, value) => {\n    onManualInputChange(inputType, value); // Pass the inputType and value directly without 'name'\n  };\n\n  const handleToggleShowAll = () => {\n    setShowAll(!showAll);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleShowAll,\n        children: showAll ? '-' : '+'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-cards\",\n      children: showAll ? options.map((item, index) => /*#__PURE__*/_jsxDEV(DataCard, {\n        item: item,\n        selectedItem: selectedItem,\n        onItemClick: handleItemClick,\n        showAll: showAll\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this)) : options.slice(0, 2).map((item, index) => /*#__PURE__*/_jsxDEV(DataCard, {\n        item: item,\n        selectedItem: selectedItem,\n        onItemClick: handleItemClick,\n        showAll: showAll\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), showAll && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Please enter the matching SKU if you do not see the matching SKU in suggestions, your feedback will help us improve our matching accuracy.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: typeof manualInput === 'object' && manualInput.SAP || '',\n        onChange: e => handleManualInputChange('SAP', e.target.value),\n        placeholder: \"Enter SAP Item Number...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: typeof manualInput === 'object' && manualInput.ProductDescription || '',\n        onChange: e => handleManualInputChange('ProductDescription', e.target.value),\n        placeholder: \"Enter Product Description...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFormReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n// Top-level component for displaying multiple data boxes\n_s(DataBox, \"pjirqugGCtH4lBFYko+7ncjeRcc=\");\n_c2 = DataBox;\nconst DataCards = _ref3 => {\n  _s2();\n  let {\n    responseData\n  } = _ref3;\n  const [selectedData, setSelectedData] = useState([]);\n  const [manualInputs, setManualInputs] = useState({});\n  const handleItemClick = (item, name, boxIndex) => {\n    setSelectedData(prevSelectedData => {\n      const updatedData = [...prevSelectedData];\n      updatedData[boxIndex] = {\n        item,\n        name\n      };\n      return updatedData;\n    });\n  };\n  const handleManualInput = (name, field, input) => {\n    // Find the index of the data box in manualInputs array\n    const boxIndex = selectedData.findIndex(data => data.name === name);\n\n    // If the data box exists in selectedData, update its manual inputs\n    if (boxIndex !== -1) {\n      setSelectedData(prevSelectedData => {\n        const updatedData = [...prevSelectedData];\n        updatedData[boxIndex] = {\n          ...updatedData[boxIndex],\n          manualInput: {\n            ...updatedData[boxIndex].manualInput,\n            [field]: input\n          }\n        };\n        return updatedData;\n      });\n    } else {\n      // If the data box doesn't exist in selectedData, create a new entry\n      setSelectedData(prevSelectedData => [...prevSelectedData, {\n        name,\n        item: null,\n        manualInput: {\n          [field]: input\n        }\n      }]);\n    }\n    setManualInputs(prevInputs => ({\n      ...prevInputs,\n      [name]: {\n        ...prevInputs[name],\n        [field]: input\n      }\n    }));\n  };\n  //console.log('Selected Data:', selectedData);\n  const dataEntries = Object.entries(responseData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"boxes\",\n    children: [dataEntries.map((_ref4, index) => {\n      var _selectedData$find, _selectedData$find2;\n      let [name, dataItems] = _ref4;\n      return /*#__PURE__*/_jsxDEV(DataBox, {\n        name: name,\n        responseData: dataItems,\n        onItemClick: (item, name) => handleItemClick(item, name, index),\n        item: (_selectedData$find = selectedData.find(data => data.name === name)) === null || _selectedData$find === void 0 ? void 0 : _selectedData$find.item // Pass the selected item for each databox\n        ,\n        manualInput: (_selectedData$find2 = selectedData.find(data => data.name === name)) === null || _selectedData$find2 === void 0 ? void 0 : _selectedData$find2.manualInput // Pass manual input for each databox\n        ,\n        onManualInputChange: (field, input) => handleManualInput(name, field, input) // Handle manual input change\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 8\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(ImportFile, {\n      selectedData: selectedData,\n      manualInputs: manualInputs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataCards, \"KSbmdo/v6MTrjMl+mlyn28mgbtY=\");\n_c3 = DataCards;\nexport default DataCards;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DataCard\");\n$RefreshReg$(_c2, \"DataBox\");\n$RefreshReg$(_c3, \"DataCards\");","map":{"version":3,"names":["React","useState","useEffect","ImportFile","jsxDEV","_jsxDEV","Fragment","_Fragment","DataCard","_ref","item","selectedItem","onItemClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DataBox","_ref2","_s","name","responseData","boxIndex","manualInput","onManualInputChange","setSelectedItem","options","setOptions","showAll","setShowAll","handleItemClick","console","log","handleFormReset","handleManualInputChange","inputType","value","handleToggleShowAll","map","index","slice","type","SAP","onChange","e","target","placeholder","ProductDescription","_c2","DataCards","_ref3","_s2","selectedData","setSelectedData","manualInputs","setManualInputs","prevSelectedData","updatedData","handleManualInput","field","input","findIndex","data","prevInputs","dataEntries","Object","entries","_ref4","_selectedData$find","_selectedData$find2","dataItems","find","_c3","$RefreshReg$"],"sources":["E:/Sani/Documents/Smart Search Github Pages/Test/src/components/DataCards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ImportFile from './ImportFile';\r\n\r\n// Component for an individual data card\r\nconst DataCard = ({item, selectedItem, onItemClick }) => {\r\n  return (\r\n    <div\r\n      className={`data-card ${selectedItem === item ? 'selected' : ''}`}\r\n      onClick={() => onItemClick(item)}\r\n    >\r\n      <p>{item[0]}</p> {/* Display the first property of the item object. */}\r\n      <p>{item[1]}</p> {/* Display the second property of the item object. */}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Component for a box containing data cards\r\nconst DataBox = ({ name, responseData, onItemClick, boxIndex, manualInput, onManualInputChange }) => {\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [options, setOptions] = useState([]);\r\n  const [showAll, setShowAll] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (responseData) {\r\n      setOptions(responseData); // Assign responseData directly to options\r\n    }\r\n  }, [responseData]);\r\n\r\n  // Function to handle user selections in DataCard component\r\n  const handleItemClick = (item) => {\r\n    console.log('Clicked on item:', item[0], item[1], 'in', name);\r\n    setSelectedItem(item, name);\r\n    onItemClick(item, name, boxIndex);\r\n  };\r\n\r\n  const handleFormReset = () => {\r\n    setSelectedItem(null); // Reset the selected item\r\n    onManualInputChange('SAP', ''); // Clear manualInput.SAP\r\n    onManualInputChange('ProductDescription', ''); // Clear manualInput.ProductDescription\r\n    onItemClick(null, name, boxIndex); // Pass null as the selectedItem\r\n  };\r\n\r\n  // Function to handle manual input change for \"SAP Item Number\" and \"Product Description\"\r\n  const handleManualInputChange = (inputType, value) => {\r\n    onManualInputChange(inputType, value); // Pass the inputType and value directly without 'name'\r\n  };\r\n\r\n  const handleToggleShowAll = () => {\r\n    setShowAll(!showAll);\r\n  };\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <h2>{name}</h2>\r\n       \r\n      <div className=\"button-container\">\r\n        <button onClick={handleToggleShowAll}>{showAll ? '-' : '+'}</button>\r\n      </div>\r\n      <div className=\"data-cards\">\r\n        {showAll          \r\n          ? options.map((item, index) => (\r\n              <DataCard\r\n                key={index}\r\n                item={item}\r\n                selectedItem={selectedItem}\r\n                onItemClick={handleItemClick}\r\n                showAll={showAll}\r\n              />\r\n            ))\r\n          : options.slice(0, 2).map((item, index) => (\r\n              <DataCard\r\n                key={index}\r\n                item={item}\r\n                selectedItem={selectedItem}\r\n                onItemClick={handleItemClick}\r\n                showAll={showAll}\r\n              />\r\n            ))}\r\n      </div>\r\n      {/* Conditionally render the manual input fields */}\r\n        {showAll && (\r\n          <>\r\n            <br/>\r\n            <p><b>Please enter the matching SKU if you do not see the matching SKU in suggestions, your feedback will help us improve our matching accuracy.</b></p>\r\n            <br/>\r\n            <input\r\n              type=\"text\"\r\n              value={(typeof manualInput === 'object' && manualInput.SAP) || ''}\r\n              onChange={(e) => handleManualInputChange('SAP', e.target.value)}\r\n              placeholder=\"Enter SAP Item Number...\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={(typeof manualInput === 'object' && manualInput.ProductDescription) || ''}\r\n              onChange={(e) => handleManualInputChange('ProductDescription', e.target.value)}\r\n              placeholder=\"Enter Product Description...\"\r\n            />\r\n          </>\r\n        )}\r\n      <div className=\"button-container\">\r\n        <button onClick={handleFormReset}>Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Top-level component for displaying multiple data boxes\r\nconst DataCards = ({ responseData }) => {\r\n\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [manualInputs, setManualInputs] = useState({});\r\n\r\n  const handleItemClick = (item, name, boxIndex) => {\r\n    setSelectedData((prevSelectedData) => {\r\n      const updatedData = [...prevSelectedData];\r\n      updatedData[boxIndex] = { item, name };\r\n      return updatedData;\r\n    });\r\n  };\r\n\r\n  const handleManualInput = (name, field, input) => {\r\n    // Find the index of the data box in manualInputs array\r\n    const boxIndex = selectedData.findIndex((data) => data.name === name);\r\n  \r\n    // If the data box exists in selectedData, update its manual inputs\r\n    if (boxIndex !== -1) {\r\n      setSelectedData((prevSelectedData) => {\r\n        const updatedData = [...prevSelectedData];\r\n        updatedData[boxIndex] = {\r\n          ...updatedData[boxIndex],\r\n          manualInput: {\r\n            ...updatedData[boxIndex].manualInput,\r\n            [field]: input,\r\n          },\r\n        };\r\n        return updatedData;\r\n      });\r\n    } else {\r\n      // If the data box doesn't exist in selectedData, create a new entry\r\n      setSelectedData((prevSelectedData) => [\r\n        ...prevSelectedData,\r\n        { name, item: null, manualInput: { [field]: input } },\r\n      ]);\r\n    }\r\n  \r\n    setManualInputs((prevInputs) => ({\r\n      ...prevInputs,\r\n      [name]: {\r\n        ...prevInputs[name],\r\n        [field]: input,\r\n      },\r\n    }));\r\n  };\r\n  //console.log('Selected Data:', selectedData);\r\n  const dataEntries = Object.entries(responseData);\r\n\r\n  return (\r\n    <div className=\"boxes\">\r\n      {dataEntries.map(([name, dataItems], index) => (\r\n       <DataBox\r\n        key={name}\r\n        name={name}\r\n        responseData={dataItems}\r\n        onItemClick={(item, name) => handleItemClick(item, name, index)}\r\n        item={selectedData.find((data) => data.name === name)?.item} // Pass the selected item for each databox\r\n        manualInput={selectedData.find((data) => data.name === name)?.manualInput} // Pass manual input for each databox\r\n        onManualInputChange={(field, input) => handleManualInput(name, field, input)} // Handle manual input change\r\n     />\r\n      ))}\r\n      {/* Render the ImportFile component and pass the selectedData */}\r\n      <ImportFile selectedData={selectedData} manualInputs={manualInputs} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataCards;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,QAAQ,GAAGC,IAAA,IAAwC;EAAA,IAAvC;IAACC,IAAI;IAAEC,YAAY;IAAEC;EAAY,CAAC,GAAAH,IAAA;EAClD,oBACEJ,OAAA;IACEQ,SAAS,EAAG,aAAYF,YAAY,KAAKD,IAAI,GAAG,UAAU,GAAG,EAAG,EAAE;IAClEI,OAAO,EAAEA,CAAA,KAAMF,WAAW,CAACF,IAAI,CAAE;IAAAK,QAAA,gBAEjCV,OAAA;MAAAU,QAAA,EAAIL,IAAI,CAAC,CAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,eACjBd,OAAA;MAAAU,QAAA,EAAIL,IAAI,CAAC,CAAC;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEV,CAAC;;AAED;AAAAC,EAAA,GAZMZ,QAAQ;AAad,MAAMa,OAAO,GAAGC,KAAA,IAAqF;EAAAC,EAAA;EAAA,IAApF;IAAEC,IAAI;IAAEC,YAAY;IAAEb,WAAW;IAAEc,QAAQ;IAAEC,WAAW;IAAEC;EAAoB,CAAC,GAAAN,KAAA;EAC9F,MAAM,CAACX,YAAY,EAAEkB,eAAe,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC+B,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,IAAIuB,YAAY,EAAE;MAChBM,UAAU,CAACN,YAAY,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMS,eAAe,GAAIxB,IAAI,IAAK;IAChCyB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE1B,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,EAAEc,IAAI,CAAC;IAC7DK,eAAe,CAACnB,IAAI,EAAEc,IAAI,CAAC;IAC3BZ,WAAW,CAACF,IAAI,EAAEc,IAAI,EAAEE,QAAQ,CAAC;EACnC,CAAC;EAED,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5BR,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IACvBD,mBAAmB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IAChCA,mBAAmB,CAAC,oBAAoB,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/ChB,WAAW,CAAC,IAAI,EAAEY,IAAI,EAAEE,QAAQ,CAAC,CAAC,CAAC;EACrC,CAAC;;EAED;EACA,MAAMY,uBAAuB,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IACpDZ,mBAAmB,CAACW,SAAS,EAAEC,KAAK,CAAC,CAAC,CAAC;EACzC,CAAC;;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCR,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,oBACE3B,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAE,QAAA,gBAClBV,OAAA;MAAAU,QAAA,EAAKS;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEfd,OAAA;MAAKQ,SAAS,EAAC,kBAAkB;MAAAE,QAAA,eAC/BV,OAAA;QAAQS,OAAO,EAAE2B,mBAAoB;QAAA1B,QAAA,EAAEiB,OAAO,GAAG,GAAG,GAAG;MAAG;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACNd,OAAA;MAAKQ,SAAS,EAAC,YAAY;MAAAE,QAAA,EACxBiB,OAAO,GACJF,OAAO,CAACY,GAAG,CAAC,CAAChC,IAAI,EAAEiC,KAAK,kBACtBtC,OAAA,CAACG,QAAQ;QAEPE,IAAI,EAAEA,IAAK;QACXC,YAAY,EAAEA,YAAa;QAC3BC,WAAW,EAAEsB,eAAgB;QAC7BF,OAAO,EAAEA;MAAQ,GAJZW,KAAK;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF,CAAC,GACFW,OAAO,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACF,GAAG,CAAC,CAAChC,IAAI,EAAEiC,KAAK,kBAClCtC,OAAA,CAACG,QAAQ;QAEPE,IAAI,EAAEA,IAAK;QACXC,YAAY,EAAEA,YAAa;QAC3BC,WAAW,EAAEsB,eAAgB;QAC7BF,OAAO,EAAEA;MAAQ,GAJZW,KAAK;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEHa,OAAO,iBACN3B,OAAA,CAAAE,SAAA;MAAAQ,QAAA,gBACEV,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLd,OAAA;QAAAU,QAAA,eAAGV,OAAA;UAAAU,QAAA,EAAG;QAA0I;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxJd,OAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLd,OAAA;QACEwC,IAAI,EAAC,MAAM;QACXL,KAAK,EAAG,OAAOb,WAAW,KAAK,QAAQ,IAAIA,WAAW,CAACmB,GAAG,IAAK,EAAG;QAClEC,QAAQ,EAAGC,CAAC,IAAKV,uBAAuB,CAAC,KAAK,EAAEU,CAAC,CAACC,MAAM,CAACT,KAAK,CAAE;QAChEU,WAAW,EAAC;MAA0B;QAAAlC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACFd,OAAA;QACEwC,IAAI,EAAC,MAAM;QACXL,KAAK,EAAG,OAAOb,WAAW,KAAK,QAAQ,IAAIA,WAAW,CAACwB,kBAAkB,IAAK,EAAG;QACjFJ,QAAQ,EAAGC,CAAC,IAAKV,uBAAuB,CAAC,oBAAoB,EAAEU,CAAC,CAACC,MAAM,CAACT,KAAK,CAAE;QAC/EU,WAAW,EAAC;MAA8B;QAAAlC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA,eACF,CACH,eACHd,OAAA;MAAKQ,SAAS,EAAC,kBAAkB;MAAAE,QAAA,eAC/BV,OAAA;QAAQS,OAAO,EAAEuB,eAAgB;QAAAtB,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAI,EAAA,CAzFMF,OAAO;AAAA+B,GAAA,GAAP/B,OAAO;AA0Fb,MAAMgC,SAAS,GAAGC,KAAA,IAAsB;EAAAC,GAAA;EAAA,IAArB;IAAE9B;EAAa,CAAC,GAAA6B,KAAA;EAEjC,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACyD,YAAY,EAAEC,eAAe,CAAC,GAAG1D,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpD,MAAMiC,eAAe,GAAGA,CAACxB,IAAI,EAAEc,IAAI,EAAEE,QAAQ,KAAK;IAChD+B,eAAe,CAAEG,gBAAgB,IAAK;MACpC,MAAMC,WAAW,GAAG,CAAC,GAAGD,gBAAgB,CAAC;MACzCC,WAAW,CAACnC,QAAQ,CAAC,GAAG;QAAEhB,IAAI;QAAEc;MAAK,CAAC;MACtC,OAAOqC,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAACtC,IAAI,EAAEuC,KAAK,EAAEC,KAAK,KAAK;IAChD;IACA,MAAMtC,QAAQ,GAAG8B,YAAY,CAACS,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAAC1C,IAAI,KAAKA,IAAI,CAAC;;IAErE;IACA,IAAIE,QAAQ,KAAK,CAAC,CAAC,EAAE;MACnB+B,eAAe,CAAEG,gBAAgB,IAAK;QACpC,MAAMC,WAAW,GAAG,CAAC,GAAGD,gBAAgB,CAAC;QACzCC,WAAW,CAACnC,QAAQ,CAAC,GAAG;UACtB,GAAGmC,WAAW,CAACnC,QAAQ,CAAC;UACxBC,WAAW,EAAE;YACX,GAAGkC,WAAW,CAACnC,QAAQ,CAAC,CAACC,WAAW;YACpC,CAACoC,KAAK,GAAGC;UACX;QACF,CAAC;QACD,OAAOH,WAAW;MACpB,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAJ,eAAe,CAAEG,gBAAgB,IAAK,CACpC,GAAGA,gBAAgB,EACnB;QAAEpC,IAAI;QAAEd,IAAI,EAAE,IAAI;QAAEiB,WAAW,EAAE;UAAE,CAACoC,KAAK,GAAGC;QAAM;MAAE,CAAC,CACtD,CAAC;IACJ;IAEAL,eAAe,CAAEQ,UAAU,KAAM;MAC/B,GAAGA,UAAU;MACb,CAAC3C,IAAI,GAAG;QACN,GAAG2C,UAAU,CAAC3C,IAAI,CAAC;QACnB,CAACuC,KAAK,GAAGC;MACX;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EACD;EACA,MAAMI,WAAW,GAAGC,MAAM,CAACC,OAAO,CAAC7C,YAAY,CAAC;EAEhD,oBACEpB,OAAA;IAAKQ,SAAS,EAAC,OAAO;IAAAE,QAAA,GACnBqD,WAAW,CAAC1B,GAAG,CAAC,CAAA6B,KAAA,EAAoB5B,KAAK;MAAA,IAAA6B,kBAAA,EAAAC,mBAAA;MAAA,IAAxB,CAACjD,IAAI,EAAEkD,SAAS,CAAC,GAAAH,KAAA;MAAA,oBAClClE,OAAA,CAACgB,OAAO;QAEPG,IAAI,EAAEA,IAAK;QACXC,YAAY,EAAEiD,SAAU;QACxB9D,WAAW,EAAEA,CAACF,IAAI,EAAEc,IAAI,KAAKU,eAAe,CAACxB,IAAI,EAAEc,IAAI,EAAEmB,KAAK,CAAE;QAChEjC,IAAI,GAAA8D,kBAAA,GAAEhB,YAAY,CAACmB,IAAI,CAAET,IAAI,IAAKA,IAAI,CAAC1C,IAAI,KAAKA,IAAI,CAAC,cAAAgD,kBAAA,uBAA/CA,kBAAA,CAAiD9D,IAAK,CAAC;QAAA;QAC7DiB,WAAW,GAAA8C,mBAAA,GAAEjB,YAAY,CAACmB,IAAI,CAAET,IAAI,IAAKA,IAAI,CAAC1C,IAAI,KAAKA,IAAI,CAAC,cAAAiD,mBAAA,uBAA/CA,mBAAA,CAAiD9C,WAAY,CAAC;QAAA;QAC3EC,mBAAmB,EAAEA,CAACmC,KAAK,EAAEC,KAAK,KAAKF,iBAAiB,CAACtC,IAAI,EAAEuC,KAAK,EAAEC,KAAK,CAAE,CAAC;MAAA,GANzExC,IAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOX,CAAC;IAAA,CACA,CAAC,eAEFd,OAAA,CAACF,UAAU;MAACqD,YAAY,EAAEA,YAAa;MAACE,YAAY,EAAEA;IAAa;MAAA1C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV,CAAC;AAACoC,GAAA,CAlEIF,SAAS;AAAAuB,GAAA,GAATvB,SAAS;AAoEf,eAAeA,SAAS;AAAC,IAAAjC,EAAA,EAAAgC,GAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzD,EAAA;AAAAyD,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}