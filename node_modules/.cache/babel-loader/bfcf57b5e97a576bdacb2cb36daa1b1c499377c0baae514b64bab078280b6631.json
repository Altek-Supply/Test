{"ast":null,"code":"import _toConsumableArray from\"E:/Sani/Documents/Smart Search Github Pages/Test/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React from'react';import*as XLSX from'xlsx';import{jsx as _jsx}from\"react/jsx-runtime\";var ImportFile=function ImportFile(_ref){var selectedData=_ref.selectedData,manualInputs=_ref.manualInputs;var handleDownload=function handleDownload(){console.log('Manual input in importfile is:',manualInputs);console.log('Datacard selections made in importfile are:',selectedData);// Create a new workbook\nvar workbook=XLSX.utils.book_new();// Format the selectedData and manualInputs into the appropriate format (array of arrays)\nvar sheetData=selectedData.map(function(_ref2){var _manualInputs$name,_manualInputs$name2;var item=_ref2.item,name=_ref2.name,manualInput=_ref2.manualInput;return[name,item?item[0]:(manualInput===null||manualInput===void 0?void 0:manualInput.SAP)||'',item?item[1]:(manualInput===null||manualInput===void 0?void 0:manualInput.ProductDescription)||'',((_manualInputs$name=manualInputs[name])===null||_manualInputs$name===void 0?void 0:_manualInputs$name.AlternateSAP)||'',// Use \"AlternateSAP\"\n((_manualInputs$name2=manualInputs[name])===null||_manualInputs$name2===void 0?void 0:_manualInputs$name2.AlternateProductDescription)||''// Use \"AlternateProductDescription\"\n];});// Create a new worksheet\nvar worksheet=XLSX.utils.aoa_to_sheet([['End User Description','SAP Item Number','Product Description','Alternate SAP','Alternate Product Description']].concat(_toConsumableArray(sheetData)));// Add the worksheet to the workbook\nXLSX.utils.book_append_sheet(workbook,worksheet,'SelectedData');// Convert the workbook to a binary string\nvar excelFile=XLSX.write(workbook,{type:'binary'});// Create a blob with the binary data and create a download link\nvar blob=new Blob([s2ab(excelFile)],{type:'application/octet-stream'});var url=URL.createObjectURL(blob);// Trigger the download\nvar a=document.createElement('a');a.href=url;a.download='selected_data.xlsx';a.click();// Cleanup\nURL.revokeObjectURL(url);};// Convert a string to an array buffer\nvar s2ab=function s2ab(s){var buf=new ArrayBuffer(s.length);var view=new Uint8Array(buf);for(var i=0;i!==s.length;++i)view[i]=s.charCodeAt(i)&0xff;return buf;};return/*#__PURE__*/_jsx(\"div\",{className:\"button-container\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleDownload,children:\"Download Excel\"})});};export default ImportFile;","map":{"version":3,"names":["React","XLSX","jsx","_jsx","ImportFile","_ref","selectedData","manualInputs","handleDownload","console","log","workbook","utils","book_new","sheetData","map","_ref2","_manualInputs$name","_manualInputs$name2","item","name","manualInput","SAP","ProductDescription","AlternateSAP","AlternateProductDescription","worksheet","aoa_to_sheet","concat","_toConsumableArray","book_append_sheet","excelFile","write","type","blob","Blob","s2ab","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","className","children","onClick"],"sources":["E:/Sani/Documents/Smart Search Github Pages/Test/src/components/ImportFile.js"],"sourcesContent":["import React from 'react';\r\nimport * as XLSX from 'xlsx';\r\n\r\nconst ImportFile = ({ selectedData, manualInputs }) => {\r\n  \r\n  const handleDownload = () => {\r\n    console.log('Manual input in importfile is:', manualInputs)\r\n    console.log('Datacard selections made in importfile are:', selectedData)\r\n    // Create a new workbook\r\n    const workbook = XLSX.utils.book_new();\r\n\r\n    \r\n    // Format the selectedData and manualInputs into the appropriate format (array of arrays)\r\n    const sheetData = selectedData.map(({ item, name, manualInput }) => [\r\n      name,\r\n      item ? item[0] : manualInput?.SAP || '',\r\n      item ? item[1] : manualInput?.ProductDescription || '',\r\n      manualInputs[name]?.AlternateSAP || '',  // Use \"AlternateSAP\"\r\n      manualInputs[name]?.AlternateProductDescription || '',  // Use \"AlternateProductDescription\"\r\n    ]);\r\n\r\n    // Create a new worksheet\r\n    const worksheet = XLSX.utils.aoa_to_sheet([['End User Description', 'SAP Item Number', 'Product Description', 'Alternate SAP', 'Alternate Product Description'], ...sheetData]);\r\n    // Add the worksheet to the workbook\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'SelectedData');\r\n    // Convert the workbook to a binary string\r\n    const excelFile = XLSX.write(workbook, { type: 'binary' });\r\n\r\n    // Create a blob with the binary data and create a download link\r\n    const blob = new Blob([s2ab(excelFile)], { type: 'application/octet-stream' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    // Trigger the download\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'selected_data.xlsx';\r\n    a.click();\r\n    // Cleanup\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Convert a string to an array buffer\r\n  const s2ab = (s) => {\r\n    const buf = new ArrayBuffer(s.length);\r\n    const view = new Uint8Array(buf);\r\n    for (let i = 0; i !== s.length; ++i) view[i] = s.charCodeAt(i) & 0xff;\r\n    return buf;\r\n  };\r\n\r\n  return (\r\n    <div className=\"button-container\">\r\n    <button onClick={handleDownload}>Download Excel</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportFile;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}