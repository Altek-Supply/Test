{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sani\\\\Documents\\\\Smart Search Github Pages\\\\Test\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DataCards from './DataCards';\nimport Loading from './Loading';\nimport logoImage from '../logo.png';\nimport { v4 as uuidv4 } from 'uuid';\nimport '../Loading.css';\n\n// Function to split an array into chunks of a specified size\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction chunkArray(array, size) {\n  const chunks = [];\n  for (let i = 0; i < array.length; i += size) {\n    // Array.length comes from number of user descriptions i.e data.names\n    chunks.push(array.slice(i, i + size)); /*In case of 100 descriptions/data.names 6 chunks created as multiples of 15, remaining 10 will be stored as final chunk cause .slice built in function handles out of bound array exception*/\n  }\n\n  return chunks;\n}\nfunction PostForm() {\n  _s();\n  const sessionID = localStorage.getItem('sessionID') || uuidv4();\n  const endpointUrl = 'https://20.230.148.143/api/smartsearch'; // Endpoint URL\n  const [loading, setLoading] = useState(false); // Defining loading state as false on initialization\n  const [selectedData, setSelectedData] = useState([]);\n  const [data, setData] = useState({\n    names: []\n  });\n  const [responseData, setResponseData] = useState(null);\n  localStorage.getItem('sessionID', sessionID);\n\n  // Function to handle user selections\n  const handleSelection = selection => {\n    setSelectedData(prevData => [...prevData, selection]);\n  };\n  const generateExcelFile = () => {\n    const worksheet = utils.aoa_to_sheet([['Column1', 'Column2'],\n    // Header row\n    ...selectedData //User selections as data rows\n    ]);\n\n    const workBook = utils.book_new();\n    utils.book_append_sheet(workbook, worksheet, 'Sheet 1');\n\n    //Generate and download excel file\n    writeFile(workbook, 'search-selections.xlsx');\n  };\n  useEffect(() => {\n    localStorage.setItem('sessionID', sessionID);\n    console.log('Session ID:', sessionID);\n  }, []);\n  function submit(e) {\n    e.preventDefault();\n    setLoading(true);\n    const searchChunks = chunkArray(data.names, 15); // Split data.names into chunks of 15 using chunkArray function  \n\n    const requests = searchChunks.map(chunk => {\n      const searchString = encodeURIComponent(chunk.join('*'));\n      const chunkUrl = `${endpointUrl}?sessionID=${sessionID}&txt=${searchString}`;\n      return fetch(chunkUrl).then(response => response.json()).catch(error => {\n        console.log(error);\n        return null;\n      });\n    });\n\n    // Function to merge individual response objects into a single object\n    function mergeResponses(responses) {\n      const mergedData = {};\n      responses.forEach(response => {\n        Object.entries(response).forEach(_ref => {\n          let [searchDescription, items] = _ref;\n          if (!mergedData[searchDescription]) {\n            mergedData[searchDescription] = items;\n          } else {\n            mergedData[searchDescription].push(...items);\n          }\n        });\n      });\n      return mergedData;\n    }\n    Promise.all(requests) //Promises are asynchronous and wait for all request call to be answered, in our case of 100 descriptions the requests/endpoint calls would be 7.\n    .then(responses => {\n      const mergedData = mergeResponses(responses); // Merge the individual responses\n      console.log(mergedData);\n      setResponseData(mergedData);\n      setLoading(false);\n    });\n  }\n  function handle(e) {\n    const inputValue = e.target.value;\n    const inputArray = inputValue.split('*');\n    setData({\n      names: inputArray\n    });\n    console.log(inputArray);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Forms\",\n    className: \"forms\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImage,\n          alt: \"Logo\",\n          className: \"logo-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form_box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Atlas smart search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              onChange: handle,\n              className: \"sku_textarea\",\n              value: data.names.join('*'),\n              placeholder: \"PASTE END USER DESCRIPTION AS PROMPT\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output_box\",\n        children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), !loading && responseData && /*#__PURE__*/_jsxDEV(DataCards, {\n          names: data.names,\n          responseData: responseData,\n          onSelection: handleSelection // Passing handleSelection function onto datacards as a prop.\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: generateExcelFile,\n            children: \"Download Excel File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(PostForm, \"7hY/Vp8KYqiiu6FV+xfmJBUabPI=\");\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","useEffect","DataCards","Loading","logoImage","v4","uuidv4","jsxDEV","_jsxDEV","chunkArray","array","size","chunks","i","length","push","slice","PostForm","_s","sessionID","localStorage","getItem","endpointUrl","loading","setLoading","selectedData","setSelectedData","data","setData","names","responseData","setResponseData","handleSelection","selection","prevData","generateExcelFile","worksheet","utils","aoa_to_sheet","workBook","book_new","book_append_sheet","workbook","writeFile","setItem","console","log","submit","e","preventDefault","searchChunks","requests","map","chunk","searchString","encodeURIComponent","join","chunkUrl","fetch","then","response","json","catch","error","mergeResponses","responses","mergedData","forEach","Object","entries","_ref","searchDescription","items","Promise","all","handle","inputValue","target","value","inputArray","split","id","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","type","onSelection","onClick","_c","$RefreshReg$"],"sources":["E:/Sani/Documents/Smart Search Github Pages/Test/src/components/PostForm.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport DataCards from './DataCards';\r\nimport Loading from './Loading';\r\nimport logoImage from '../logo.png';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport '../Loading.css';\r\n\r\n    // Function to split an array into chunks of a specified size\r\n    function chunkArray(array, size) {\r\n      const chunks = [];\r\n      for (let i = 0; i < array.length; i += size) { // Array.length comes from number of user descriptions i.e data.names\r\n        chunks.push(array.slice(i, i + size)); /*In case of 100 descriptions/data.names 6 chunks created as multiples of 15, remaining 10 will be stored as final chunk cause .slice built in function handles out of bound array exception*/\r\n      }\r\n      return chunks; \r\n    }\r\n\r\nfunction PostForm() {\r\n  const sessionID = localStorage.getItem('sessionID') || uuidv4();\r\n  const endpointUrl = 'https://20.230.148.143/api/smartsearch'; // Endpoint URL\r\n  const [loading, setLoading] = useState(false); // Defining loading state as false on initialization\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const [data, setData] = useState({\r\n    names: []\r\n  });\r\n  const [responseData, setResponseData] = useState(null);\r\n\r\n  localStorage.getItem('sessionID', sessionID);\r\n\r\n  // Function to handle user selections\r\n  const handleSelection = (selection) =>{\r\n    setSelectedData((prevData) => [...prevData, selection]);\r\n  };\r\n\r\n  const generateExcelFile = () =>{\r\n    const worksheet = utils.aoa_to_sheet([\r\n      ['Column1','Column2'], // Header row\r\n      ...selectedData, //User selections as data rows\r\n    ])\r\n\r\n    const workBook = utils.book_new();\r\n    utils.book_append_sheet(workbook, worksheet, 'Sheet 1');\r\n\r\n    //Generate and download excel file\r\n    writeFile(workbook, 'search-selections.xlsx');\r\n  }\r\n\r\n  useEffect(()=>{\r\n    localStorage.setItem('sessionID',sessionID)\r\n    console.log('Session ID:', sessionID);\r\n  }, [])\r\n\r\n  function submit(e) {\r\n    e.preventDefault();\r\n  setLoading(true);\r\n  const searchChunks = chunkArray(data.names, 15); // Split data.names into chunks of 15 using chunkArray function  \r\n\r\n  const requests = searchChunks.map((chunk) => {\r\n    const searchString = encodeURIComponent(chunk.join('*'));\r\n    const chunkUrl = `${endpointUrl}?sessionID=${sessionID}&txt=${searchString}`;\r\n\r\n    return fetch(chunkUrl)\r\n      .then((response) => response.json())\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return null;\r\n      });\r\n  });\r\n\r\n// Function to merge individual response objects into a single object\r\nfunction mergeResponses(responses) {\r\n  const mergedData = {};\r\n\r\n  responses.forEach((response) => {\r\n    Object.entries(response).forEach(([searchDescription, items]) => {\r\n      if (!mergedData[searchDescription]) {\r\n        mergedData[searchDescription] = items;\r\n      } else {\r\n        mergedData[searchDescription].push(...items);\r\n      }\r\n    });\r\n  });\r\n  return mergedData;\r\n}\r\n\r\n  Promise.all(requests) //Promises are asynchronous and wait for all request call to be answered, in our case of 100 descriptions the requests/endpoint calls would be 7.\r\n    .then((responses) => {\r\n      const mergedData = mergeResponses(responses); // Merge the individual responses\r\n      console.log(mergedData);\r\n      setResponseData(mergedData);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  function handle(e) {\r\n    const inputValue = e.target.value;\r\n    const inputArray = inputValue.split('*');\r\n    setData({ names: inputArray });\r\n    console.log(inputArray);\r\n  }\r\n\r\n  return (\r\n    <div id=\"Forms\" className=\"forms\">\r\n      <div className=\"container\">\r\n      <div className=\"logo-container\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"logo-image\" />\r\n      </div>\r\n        <form onSubmit={submit}>\r\n          <div className=\"form_box\">\r\n            <div className=\"row\">\r\n              <h1>Atlas smart search</h1>\r\n              <textarea\r\n                onChange={handle}\r\n                className=\"sku_textarea\"\r\n                value={data.names.join('*')}\r\n                placeholder=\"PASTE END USER DESCRIPTION AS PROMPT\"\r\n                type=\"text\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn-submit\">Submit</button>\r\n        </form>\r\n\r\n        <div className=\"output_box\">\r\n            {loading && <Loading />}\r\n            {!loading && responseData && \r\n            (<DataCards \r\n              names={data.names} \r\n              responseData={responseData}\r\n              onSelection={handleSelection} // Passing handleSelection function onto datacards as a prop.\r\n            /> \r\n            )} \r\n            <div className=\"button-container\">\r\n            <button onClick={generateExcelFile}>Download Excel File</button>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}