{"ast":null,"code":"import _toConsumableArray from\"E:/Sani/Documents/Smart Search Github Pages/Test/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"E:/Sani/Documents/Smart Search Github Pages/Test/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import DataCards from'./DataCards';import Loading from'./Loading';import logoImage from'../logo.png';import{v4 as uuidv4}from'uuid';import InstructionsModal from'./InstructionsModal';import'../Loading.css';// Function to split an array into chunks of a specified size\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function chunkArray(array,size){var chunks=[];for(var i=0;i<array.length;i+=size){// Array.length comes from number of user descriptions i.e data.names\nchunks.push(array.slice(i,i+size));/*In case of 100 descriptions/data.names 6 chunks created as multiples of 15, remaining 10 will be stored as final chunk cause .slice built in function handles out of bound array exception*/}return chunks;}function PostForm(){var sessionID=localStorage.getItem('sessionID')||uuidv4();var endpointUrl='https://20.230.148.143/api/smartsearch';// Endpoint URL\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];// Defining loading state as false on initialization\nvar _useState3=useState({names:[]}),_useState4=_slicedToArray(_useState3,2),data=_useState4[0],setData=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),responseData=_useState6[0],setResponseData=_useState6[1];localStorage.getItem('sessionID',sessionID);useEffect(function(){localStorage.setItem('sessionID',sessionID);console.log('Session ID:',sessionID);},[sessionID]);function submit(e){e.preventDefault();setLoading(true);var searchChunks=chunkArray(data.names,15);// Split data.names into chunks of 15 using chunkArray function  \nvar requests=searchChunks.map(function(chunk){var searchString=encodeURIComponent(chunk.join('*'));var chunkUrl=\"\".concat(endpointUrl,\"?sessionID=\").concat(sessionID,\"&txt=\").concat(searchString);return fetch(chunkUrl).then(function(response){return response.json();}).catch(function(error){console.log(error);return null;});});// Function to merge individual response objects into a single object\nfunction mergeResponses(responses){var mergedData={};responses.forEach(function(response){Object.entries(response).forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),searchDescription=_ref2[0],items=_ref2[1];if(!mergedData[searchDescription]){mergedData[searchDescription]=items;}else{var _mergedData$searchDes;(_mergedData$searchDes=mergedData[searchDescription]).push.apply(_mergedData$searchDes,_toConsumableArray(items));}});});return mergedData;}Promise.all(requests)//Promises are asynchronous and wait for all request call to be answered, in our case of 100 descriptions the requests/endpoint calls would be 7.\n.then(function(responses){var mergedData=mergeResponses(responses);// Merge the individual responses\nconsole.log(mergedData);setResponseData(mergedData);setLoading(false);});}function handle(e){var inputValue=e.target.value;var inputArray=inputValue.split('*');setData({names:inputArray});console.log(inputArray);}return/*#__PURE__*/_jsx(\"div\",{id:\"Forms\",className:\"forms\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo-container\",children:/*#__PURE__*/_jsx(\"img\",{src:logoImage,alt:\"Logo\",className:\"logo-image\"})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:submit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"form_box\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Atlas smart search\"}),/*#__PURE__*/_jsx(\"textarea\",{onChange:handle,className:\"sku_textarea\",value:data.names.join('*'),placeholder:\"PASTE END USER DESCRIPTION AS PROMPT\",type:\"text\"})]})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-submit\",children:\"Submit\"})]}),/*#__PURE__*/_jsx(InstructionsModal,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"output_box\",children:[loading&&/*#__PURE__*/_jsx(Loading,{}),!loading&&responseData&&/*#__PURE__*/_jsx(DataCards,{names:data.names,responseData:responseData})]})]})});}export default PostForm;","map":{"version":3,"names":["React","useState","useEffect","DataCards","Loading","logoImage","v4","uuidv4","InstructionsModal","jsx","_jsx","jsxs","_jsxs","chunkArray","array","size","chunks","i","length","push","slice","PostForm","sessionID","localStorage","getItem","endpointUrl","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","names","_useState4","data","setData","_useState5","_useState6","responseData","setResponseData","setItem","console","log","submit","e","preventDefault","searchChunks","requests","map","chunk","searchString","encodeURIComponent","join","chunkUrl","concat","fetch","then","response","json","catch","error","mergeResponses","responses","mergedData","forEach","Object","entries","_ref","_ref2","searchDescription","items","_mergedData$searchDes","apply","_toConsumableArray","Promise","all","handle","inputValue","target","value","inputArray","split","id","className","children","src","alt","onSubmit","onChange","placeholder","type"],"sources":["E:/Sani/Documents/Smart Search Github Pages/Test/src/components/PostForm.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport DataCards from './DataCards';\r\nimport Loading from './Loading';\r\nimport logoImage from '../logo.png';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport InstructionsModal from './InstructionsModal';\r\nimport '../Loading.css';\r\n\r\n    // Function to split an array into chunks of a specified size\r\n    function chunkArray(array, size) {\r\n      const chunks = [];\r\n      for (let i = 0; i < array.length; i += size) { // Array.length comes from number of user descriptions i.e data.names\r\n        chunks.push(array.slice(i, i + size)); /*In case of 100 descriptions/data.names 6 chunks created as multiples of 15, remaining 10 will be stored as final chunk cause .slice built in function handles out of bound array exception*/\r\n      }\r\n      return chunks; \r\n    }\r\n\r\nfunction PostForm() {\r\n  const sessionID = localStorage.getItem('sessionID') || uuidv4();\r\n  const endpointUrl = 'https://20.230.148.143/api/smartsearch'; // Endpoint URL\r\n  const [loading, setLoading] = useState(false); // Defining loading state as false on initialization\r\n  const [data, setData] = useState({\r\n    names: []\r\n  });\r\n  const [responseData, setResponseData] = useState(null);\r\n\r\n  localStorage.getItem('sessionID', sessionID);\r\n\r\n  useEffect(()=>{\r\n    localStorage.setItem('sessionID',sessionID)\r\n    console.log('Session ID:', sessionID);\r\n  },[sessionID])\r\n\r\n  function submit(e) {\r\n    e.preventDefault();\r\n  setLoading(true);\r\n  const searchChunks = chunkArray(data.names, 15); // Split data.names into chunks of 15 using chunkArray function  \r\n\r\n  const requests = searchChunks.map((chunk) => {\r\n    const searchString = encodeURIComponent(chunk.join('*'));\r\n    const chunkUrl = `${endpointUrl}?sessionID=${sessionID}&txt=${searchString}`;\r\n\r\n    return fetch(chunkUrl)\r\n      .then((response) => response.json())\r\n      .catch((error) => {\r\n        console.log(error);\r\n        return null;\r\n      });\r\n  });\r\n\r\n// Function to merge individual response objects into a single object\r\nfunction mergeResponses(responses) {\r\n  const mergedData = {};\r\n\r\n  responses.forEach((response) => {\r\n    Object.entries(response).forEach(([searchDescription, items]) => {\r\n      if (!mergedData[searchDescription]) {\r\n        mergedData[searchDescription] = items;\r\n      } else {\r\n        mergedData[searchDescription].push(...items);\r\n      }\r\n    });\r\n  });\r\n  return mergedData;\r\n}\r\n\r\n  Promise.all(requests) //Promises are asynchronous and wait for all request call to be answered, in our case of 100 descriptions the requests/endpoint calls would be 7.\r\n    .then((responses) => {\r\n      const mergedData = mergeResponses(responses); // Merge the individual responses\r\n      console.log(mergedData);\r\n      setResponseData(mergedData);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  function handle(e) {\r\n    const inputValue = e.target.value;\r\n    const inputArray = inputValue.split('*');\r\n    setData({ names: inputArray });\r\n    console.log(inputArray);\r\n  }\r\n\r\n  return (\r\n    <div id=\"Forms\" className=\"forms\">\r\n      <div className=\"container\">\r\n      <div className=\"logo-container\">\r\n        <img src={logoImage} alt=\"Logo\" className=\"logo-image\" />\r\n      </div>\r\n        <form onSubmit={submit}>\r\n          <div className=\"form_box\">\r\n            <div className=\"row\">\r\n              <h1>Atlas smart search</h1>\r\n              <textarea\r\n                onChange={handle}\r\n                className=\"sku_textarea\"\r\n                value={data.names.join('*')}\r\n                placeholder=\"PASTE END USER DESCRIPTION AS PROMPT\"\r\n                type=\"text\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn-submit\">Submit</button>  \r\n        </form>   \r\n\r\n        <InstructionsModal />     \r\n\r\n        <div className=\"output_box\">\r\n            {loading && <Loading />}\r\n            {!loading && responseData && \r\n            (<DataCards names={data.names} responseData={responseData} /> \r\n            )} \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}